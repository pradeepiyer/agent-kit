[project]
name = "agent-kit"
version = "0.1.0"
description = "Developer toolkit for building AI agents with OpenAI Responses API"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "openai>=1.99.0",
    "pydantic>=2.11.7",
    "pyyaml>=6.0",
    "typer>=0.16.0",
    "aiohttp>=3.12.15",
    "aiofiles>=23.0.0",
    "httpx[http2]>=0.25.0",
    "rich>=14.1.0",
]

[project.scripts]
agent-kit = "agent_kit.main:main"

[tool.uv]
package = true

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["agent_kit*"]

[tool.setuptools.package-data]
agent_kit = [
    "data/config/*.yaml",
    "data/prompts/**/*.yaml",
]

[dependency-groups]
dev = [
    "pyright>=1.1.406",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.8",
]

[tool.ruff]
line-length = 120
target-version = "py313"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = true
line-ending = "auto"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "UP",  # pyupgrade
    "RUF", # ruff-specific rules
]
ignore = ["E501"]  # Line too long - handled by formatter

[tool.pytest.ini_options]
testpaths = ["tests/"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=agent_kit --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["agent_kit"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
show_missing = true
precision = 1
